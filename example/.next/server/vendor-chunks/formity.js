"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/formity";
exports.ids = ["vendor-chunks/formity"];
exports.modules = {

/***/ "(ssr)/./node_modules/formity/dist/formity.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/formity/dist/formity.esm.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Formity: () => (/* binding */ Formity),\n/* harmony export */   useFormity: () => (/* binding */ useFormity)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var expry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! expry */ \"(ssr)/./node_modules/expry/dist/expry.esm.js\");\n/* harmony import */ var mapsy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mapsy */ \"(ssr)/./node_modules/mapsy/dist/index.js\");\n/* harmony import */ var mapsy__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mapsy__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _createForOfIteratorHelperLoose(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (t) return (t = t.call(r)).next.bind(t);\n  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n    t && (r = t);\n    var o = 0;\n    return function () {\n      return o >= r.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: r[o++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar ListSchemaUtils;\n(function (ListSchemaUtils) {\n  function is(schema) {\n    return Array.isArray(schema);\n  }\n  ListSchemaUtils.is = is;\n  function into(schema) {\n    if (schema.length > 0) return {\n      type: \"list\",\n      index: 0\n    };\n    return null;\n  }\n  ListSchemaUtils.into = into;\n  function next(schema, position) {\n    var index = position.index;\n    if (index < schema.length - 1) return {\n      type: \"list\",\n      index: index + 1\n    };\n    return null;\n  }\n  ListSchemaUtils.next = next;\n  function at(schema, position) {\n    var index = position.index;\n    return schema[index];\n  }\n  ListSchemaUtils.at = at;\n})(ListSchemaUtils || (ListSchemaUtils = {}));\n\nvar CondSchemaUtils;\n(function (CondSchemaUtils) {\n  function is(schema) {\n    return \"cond\" in schema;\n  }\n  CondSchemaUtils.is = is;\n  function into(schema, variables) {\n    if ((0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(schema.cond[\"if\"], variables)) {\n      if (schema.cond.then.length > 0) {\n        return {\n          type: \"cond\",\n          branch: \"then\",\n          index: 0\n        };\n      }\n    } else {\n      if (schema.cond[\"else\"].length > 0) {\n        return {\n          type: \"cond\",\n          branch: \"else\",\n          index: 0\n        };\n      }\n    }\n    return null;\n  }\n  CondSchemaUtils.into = into;\n  function next(schema, position) {\n    var branch = position.branch,\n      index = position.index;\n    if (index < schema.cond[branch].length - 1) {\n      return {\n        type: \"cond\",\n        branch: branch,\n        index: index + 1\n      };\n    }\n    return null;\n  }\n  CondSchemaUtils.next = next;\n  function at(schema, position) {\n    var branch = position.branch,\n      index = position.index;\n    return schema.cond[branch][index];\n  }\n  CondSchemaUtils.at = at;\n})(CondSchemaUtils || (CondSchemaUtils = {}));\n\nvar LoopSchemaUtils;\n(function (LoopSchemaUtils) {\n  function is(schema) {\n    return \"loop\" in schema;\n  }\n  LoopSchemaUtils.is = is;\n  function into(schema, variables) {\n    if ((0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(schema.loop[\"while\"], variables)) {\n      if (schema.loop[\"do\"].length > 0) return {\n        type: \"loop\",\n        index: 0\n      };\n    }\n    return null;\n  }\n  LoopSchemaUtils.into = into;\n  function next(schema, position, variables) {\n    var index = position.index;\n    if (index < schema.loop[\"do\"].length - 1) return {\n      type: \"loop\",\n      index: index + 1\n    };\n    if ((0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(schema.loop[\"while\"], variables)) return {\n      type: \"loop\",\n      index: 0\n    };\n    return null;\n  }\n  LoopSchemaUtils.next = next;\n  function at(schema, position) {\n    var index = position.index;\n    return schema.loop[\"do\"][index];\n  }\n  LoopSchemaUtils.at = at;\n})(LoopSchemaUtils || (LoopSchemaUtils = {}));\n\nvar FlowSchemaUtils;\n(function (FlowSchemaUtils) {\n  function is(schema) {\n    return ListSchemaUtils.is(schema) || CondSchemaUtils.is(schema) || LoopSchemaUtils.is(schema);\n  }\n  FlowSchemaUtils.is = is;\n  function find(schema, path) {\n    var current = schema;\n    for (var _iterator = _createForOfIteratorHelperLoose(path), _step; !(_step = _iterator()).done;) {\n      var position = _step.value;\n      var flow = current;\n      current = at(flow, position);\n    }\n    return current;\n  }\n  FlowSchemaUtils.find = find;\n  function into(schema, variables) {\n    if (ListSchemaUtils.is(schema)) return ListSchemaUtils.into(schema);\n    if (CondSchemaUtils.is(schema)) return CondSchemaUtils.into(schema, variables);\n    if (LoopSchemaUtils.is(schema)) return LoopSchemaUtils.into(schema, variables);\n    throw new Error(\"Invalid schema\");\n  }\n  FlowSchemaUtils.into = into;\n  function next(schema, position, variables) {\n    if (ListSchemaUtils.is(schema)) return ListSchemaUtils.next(schema, position);\n    if (CondSchemaUtils.is(schema)) return CondSchemaUtils.next(schema, position);\n    if (LoopSchemaUtils.is(schema)) return LoopSchemaUtils.next(schema, position, variables);\n    throw new Error(\"Invalid schema\");\n  }\n  FlowSchemaUtils.next = next;\n  function at(schema, position) {\n    if (ListSchemaUtils.is(schema)) return ListSchemaUtils.at(schema, position);\n    if (CondSchemaUtils.is(schema)) return CondSchemaUtils.at(schema, position);\n    if (LoopSchemaUtils.is(schema)) return LoopSchemaUtils.at(schema, position);\n    throw new Error(\"Invalid schema\");\n  }\n})(FlowSchemaUtils || (FlowSchemaUtils = {}));\n\nvar FormSchemaUtils;\n(function (FormSchemaUtils) {\n  function is(schema) {\n    return \"form\" in schema;\n  }\n  FormSchemaUtils.is = is;\n  function keys(schema, variables) {\n    var defaultValues = (0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(schema.form.defaultValues, variables);\n    return function (name) {\n      return defaultValues[name][1];\n    };\n  }\n  FormSchemaUtils.keys = keys;\n  function result(schema, variables) {\n    return {\n      type: \"form\",\n      defaultValues: (0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(schema.form.defaultValues, variables),\n      resolver: (0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(schema.form.resolver, variables),\n      render: schema.form.render\n    };\n  }\n  FormSchemaUtils.result = result;\n})(FormSchemaUtils || (FormSchemaUtils = {}));\n\nvar VariablesSchemaUtils;\n(function (VariablesSchemaUtils) {\n  function is(schema) {\n    return \"variables\" in schema;\n  }\n  VariablesSchemaUtils.is = is;\n  function variables(schema, variables) {\n    return (0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(schema.variables, variables);\n  }\n  VariablesSchemaUtils.variables = variables;\n})(VariablesSchemaUtils || (VariablesSchemaUtils = {}));\n\nvar FormFieldsUtils;\n(function (FormFieldsUtils) {\n  function get(form, name, keys, defaultValue) {\n    var current = form[name];\n    for (var _iterator = _createForOfIteratorHelperLoose(keys), _step; !(_step = _iterator()).done;) {\n      var key = _step.value;\n      if (key in current.keys) {\n        current = current.keys[key];\n      } else {\n        return defaultValue;\n      }\n    }\n    if (current.data === null) return defaultValue;\n    return current.data;\n  }\n  FormFieldsUtils.get = get;\n  function set(form, name, keys, data) {\n    var _extends2, _extends3;\n    var updated = name in form ? _extends({}, form, (_extends2 = {}, _extends2[name] = {\n      data: form[name].data,\n      keys: _extends({}, form[name].keys)\n    }, _extends2)) : _extends({}, form, (_extends3 = {}, _extends3[name] = {\n      data: null,\n      keys: {}\n    }, _extends3));\n    var current = updated[name];\n    for (var _iterator2 = _createForOfIteratorHelperLoose(keys), _step2; !(_step2 = _iterator2()).done;) {\n      var key = _step2.value;\n      if (key in current.keys) {\n        var _name = current.keys[key];\n        var copy = {\n          data: _name.data,\n          keys: _extends({}, _name.keys)\n        };\n        current.keys[key] = copy;\n        current = copy;\n      } else {\n        var _name2 = {\n          data: null,\n          keys: {}\n        };\n        current.keys[key] = _name2;\n        current = _name2;\n      }\n    }\n    current.data = data;\n    return updated;\n  }\n  FormFieldsUtils.set = set;\n})(FormFieldsUtils || (FormFieldsUtils = {}));\n\nvar ListFieldsUtils;\n(function (ListFieldsUtils) {\n  function clone(flow) {\n    return {\n      type: \"list\",\n      list: _extends({}, flow.list)\n    };\n  }\n  ListFieldsUtils.clone = clone;\n  function createFlow() {\n    return {\n      type: \"list\",\n      list: {}\n    };\n  }\n  ListFieldsUtils.createFlow = createFlow;\n  function getItem(flow, position) {\n    var index = position.index;\n    if (index in flow.list) return flow.list[index];\n    return null;\n  }\n  ListFieldsUtils.getItem = getItem;\n  function setItem(flow, position, item) {\n    var index = position.index;\n    flow.list[index] = item;\n  }\n  ListFieldsUtils.setItem = setItem;\n})(ListFieldsUtils || (ListFieldsUtils = {}));\n\nvar CondFieldsUtils;\n(function (CondFieldsUtils) {\n  function clone(flow) {\n    return {\n      type: \"cond\",\n      then: _extends({}, flow.then),\n      \"else\": _extends({}, flow[\"else\"])\n    };\n  }\n  CondFieldsUtils.clone = clone;\n  function createFlow() {\n    return {\n      type: \"cond\",\n      then: {},\n      \"else\": {}\n    };\n  }\n  CondFieldsUtils.createFlow = createFlow;\n  function getItem(flow, position) {\n    var branch = position.branch,\n      index = position.index;\n    if (branch in flow) {\n      if (index in flow[branch]) return flow[branch][index];\n    }\n    return null;\n  }\n  CondFieldsUtils.getItem = getItem;\n  function setItem(flow, position, value) {\n    var _flow$branch;\n    var branch = position.branch,\n      index = position.index;\n    if (branch in flow) flow[branch][index] = value;else flow[branch] = (_flow$branch = {}, _flow$branch[index] = value, _flow$branch);\n  }\n  CondFieldsUtils.setItem = setItem;\n})(CondFieldsUtils || (CondFieldsUtils = {}));\n\nvar LoopFieldsUtils;\n(function (LoopFieldsUtils) {\n  function clone(flow) {\n    return {\n      type: \"loop\",\n      list: _extends({}, flow.list)\n    };\n  }\n  LoopFieldsUtils.clone = clone;\n  function createFlow() {\n    return {\n      type: \"loop\",\n      list: {}\n    };\n  }\n  LoopFieldsUtils.createFlow = createFlow;\n  function getItem(flow, position) {\n    var index = position.index;\n    if (index in flow.list) return flow.list[index];\n    return null;\n  }\n  LoopFieldsUtils.getItem = getItem;\n  function setItem(flow, position, item) {\n    var index = position.index;\n    flow.list[index] = item;\n  }\n  LoopFieldsUtils.setItem = setItem;\n})(LoopFieldsUtils || (LoopFieldsUtils = {}));\n\nvar FlowFieldsUtils;\n(function (FlowFieldsUtils) {\n  function get(flow, path, name, keys, defaultValue) {\n    var current = flow;\n    for (var _iterator = _createForOfIteratorHelperLoose(path), _step; !(_step = _iterator()).done;) {\n      var position = _step.value;\n      var _flow = current;\n      var item = getItem(_flow, position);\n      if (item === null) return defaultValue;\n      current = item;\n    }\n    var form = current;\n    return FormFieldsUtils.get(form, name, keys, defaultValue);\n  }\n  FlowFieldsUtils.get = get;\n  function set(flow, path, name, keys, value) {\n    var updated = clone(flow);\n    var current = updated;\n    for (var i = 0; i < path.length - 1; i++) {\n      var _position = path[i];\n      var _item = getItem(current, _position);\n      if (_item) {\n        var next = _item;\n        var cloned = clone(next);\n        setItem(current, _position, cloned);\n        current = cloned;\n      } else {\n        var _next = createFlow(path[i + 1]);\n        setItem(current, _position, _next);\n        current = _next;\n      }\n    }\n    var position = path[path.length - 1];\n    var item = getItem(current, position);\n    if (item) {\n      var form = item;\n      setItem(current, position, FormFieldsUtils.set(form, name, keys, value));\n    } else {\n      var _form2;\n      var _form = (_form2 = {}, _form2[name] = {\n        data: null,\n        keys: {}\n      }, _form2);\n      setItem(current, position, FormFieldsUtils.set(_form, name, keys, value));\n    }\n    return updated;\n  }\n  FlowFieldsUtils.set = set;\n  var clone = /*#__PURE__*/(0,mapsy__WEBPACK_IMPORTED_MODULE_2__.mapsy)([], [\"type\"], {\n    list: ListFieldsUtils.clone,\n    cond: CondFieldsUtils.clone,\n    loop: LoopFieldsUtils.clone\n  });\n  var createFlow = /*#__PURE__*/(0,mapsy__WEBPACK_IMPORTED_MODULE_2__.mapsy)([], [\"type\"], {\n    list: ListFieldsUtils.createFlow,\n    cond: CondFieldsUtils.createFlow,\n    loop: LoopFieldsUtils.createFlow\n  });\n  var getItem = /*#__PURE__*/(0,mapsy__WEBPACK_IMPORTED_MODULE_2__.mapsy)([], [\"type\"], {\n    list: ListFieldsUtils.getItem,\n    cond: CondFieldsUtils.getItem,\n    loop: LoopFieldsUtils.getItem\n  });\n  var setItem = /*#__PURE__*/(0,mapsy__WEBPACK_IMPORTED_MODULE_2__.mapsy)([], [\"type\"], {\n    list: ListFieldsUtils.setItem,\n    cond: CondFieldsUtils.setItem,\n    loop: LoopFieldsUtils.setItem\n  });\n})(FlowFieldsUtils || (FlowFieldsUtils = {}));\n\nvar Controller = /*#__PURE__*/function () {\n  function Controller(schema) {\n    this.schema = schema;\n  }\n  var _proto = Controller.prototype;\n  _proto.initial = function initial(variables) {\n    if (variables === void 0) {\n      variables = {};\n    }\n    var path = this.initialPath();\n    var stop = this.nearestStopPoint({\n      path: path,\n      variables: variables\n    });\n    var fields = {\n      type: \"list\",\n      list: {}\n    };\n    return {\n      points: [stop],\n      fields: fields\n    };\n  };\n  _proto.initialPath = function initialPath() {\n    var path = this.initialPathSchema(this.schema);\n    if (path) return path;\n    throw new Error(\"The schema is malformed\");\n  };\n  _proto.initialPathSchema = function initialPathSchema(schema) {\n    var position = FlowSchemaUtils.into(schema, {});\n    while (position) {\n      var path = this.initialPathPosition(schema, position);\n      if (path) return path;\n      position = FlowSchemaUtils.next(schema, position, {});\n    }\n    return null;\n  };\n  _proto.initialPathPosition = function initialPathPosition(schema, position) {\n    var item = FlowSchemaUtils.find(schema, [position]);\n    if (FlowSchemaUtils.is(item)) {\n      var path = this.initialPathSchema(item);\n      if (path) return [position].concat(path);else return null;\n    }\n    return [position];\n  };\n  _proto.nearestStopPoint = function nearestStopPoint(point) {\n    var current = point;\n    while (VariablesSchemaUtils.is(FlowSchemaUtils.find(this.schema, current.path))) {\n      var schema = FlowSchemaUtils.find(this.schema, current.path);\n      var variables = VariablesSchemaUtils.variables(schema, current.variables);\n      current = {\n        path: current.path,\n        variables: _extends({}, current.variables, variables)\n      };\n      current = this.nextPoint(current);\n    }\n    return current;\n  };\n  _proto.nextPoint = function nextPoint(point) {\n    var selected = this.nextFlowPoint(point);\n    if (selected) return selected;\n    return this.nextPoint(this.parentPoint(point));\n  };\n  _proto.nextFlowPoint = function nextFlowPoint(point) {\n    var next = this.nextFlowPointNext(point);\n    if (next) {\n      var into = this.nextFlowPointInto(next);\n      if (into) return into;\n      return this.nextFlowPoint(next);\n    }\n    return null;\n  };\n  _proto.nextFlowPointNext = function nextFlowPointNext(point) {\n    var flow = FlowSchemaUtils.find(this.schema, point.path.slice(0, -1));\n    var position = FlowSchemaUtils.next(flow, point.path[point.path.length - 1], point.variables);\n    if (position) {\n      var path = [].concat(point.path.slice(0, -1), [position]);\n      return {\n        path: path,\n        variables: point.variables\n      };\n    }\n    return null;\n  };\n  _proto.nextFlowPointInto = function nextFlowPointInto(point) {\n    var item = FlowSchemaUtils.find(this.schema, point.path);\n    if (FlowSchemaUtils.is(item)) {\n      var position = FlowSchemaUtils.into(item, point.variables);\n      if (position) {\n        var path = [].concat(point.path, [position]);\n        var next = {\n          path: path,\n          variables: point.variables\n        };\n        var into = this.nextFlowPointInto(next);\n        if (into) return into;\n        return this.nextFlowPoint(next);\n      }\n      return null;\n    }\n    return point;\n  };\n  _proto.parentPoint = function parentPoint(point) {\n    if (point.path.length > 1) return {\n      path: point.path.slice(0, -1),\n      variables: point.variables\n    };\n    throw new Error(\"The schema is malformed\");\n  };\n  _proto.next = function next(flow, formData) {\n    var fields = this.updateFields(flow, formData);\n    return this.navigateNext(flow, fields, formData);\n  };\n  _proto.updateFields = function updateFields(flow, formData) {\n    var stop = flow.points[flow.points.length - 1];\n    var form = FlowSchemaUtils.find(this.schema, stop.path);\n    var keys = FormSchemaUtils.keys(form, stop.variables);\n    var fields = flow.fields;\n    for (var _i = 0, _Object$entries = Object.entries(formData); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _Object$entries[_i],\n        name = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      fields = FlowFieldsUtils.set(fields, stop.path, name, keys(name), value);\n    }\n    return fields;\n  };\n  _proto.navigateNext = function navigateNext(flow, fields, formData) {\n    var last = flow.points[flow.points.length - 1];\n    var vars = _extends({}, last.variables, formData);\n    var next = this.nearestStopPoint(this.nextPoint({\n      path: last.path,\n      variables: vars\n    }));\n    return {\n      points: [].concat(flow.points, [next]),\n      fields: fields\n    };\n  };\n  _proto.previous = function previous(flow, formData) {\n    var fields = this.updateFields(flow, formData);\n    return this.navigatePrevious(flow, fields);\n  };\n  _proto.navigatePrevious = function navigatePrevious(flow, fields) {\n    var prev = flow.points.slice(0, -1);\n    return {\n      points: prev,\n      fields: fields\n    };\n  };\n  return Controller;\n}();\n\nfunction useDefaultValues(form, path, fields) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return Object.fromEntries(Object.entries(form.defaultValues).map(function (_ref) {\n      var name = _ref[0],\n        _ref$ = _ref[1],\n        value = _ref$[0],\n        keys = _ref$[1];\n      return [name, FlowFieldsUtils.get(fields, path, name, keys, value)];\n    }));\n  }, [form, path, fields]);\n}\n\nfunction useResolver(form) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return function (values) {\n      var errors = {};\n      for (var _i = 0, _Object$entries = Object.entries(form.resolver); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _Object$entries[_i],\n          name = _Object$entries$_i[0],\n          validations = _Object$entries$_i[1];\n        var error = validations.find(function (_ref) {\n          var expr = _ref[0];\n          return !(0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(expr, values);\n        });\n        if (error) errors[name] = {\n          type: \"validation\",\n          message: error[1]\n        };\n      }\n      return {\n        values: values,\n        errors: errors\n      };\n    };\n  }, [form]);\n}\n\nfunction useRender(form, variables, components) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    var callback = function callback(value) {\n      var object = value;\n      var _Object$keys = Object.keys(object),\n        key = _Object$keys[0];\n      var component = components[key];\n      var values = object[key];\n      return component(values, callback);\n    };\n    return function (values) {\n      var render = (0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(form.render, _extends({}, variables, values));\n      return callback(render);\n    };\n  }, [form, variables, components]);\n}\n\nvar FormityContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nfunction useFormity() {\n  var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(FormityContext);\n  if (!context) throw new Error(\"useFormity must be used within Formity\");\n  return context;\n}\n\nvar ReturnSchemaUtils;\n(function (ReturnSchemaUtils) {\n  function is(schema) {\n    return \"return\" in schema;\n  }\n  ReturnSchemaUtils.is = is;\n  function result(schema, variables) {\n    return {\n      type: \"return\",\n      \"return\": (0,expry__WEBPACK_IMPORTED_MODULE_1__.expry)(schema[\"return\"], variables)\n    };\n  }\n  ReturnSchemaUtils.result = result;\n})(ReturnSchemaUtils || (ReturnSchemaUtils = {}));\n\nvar StepSchemaUtils;\n(function (StepSchemaUtils) {\n  function is(schema) {\n    return FormSchemaUtils.is(schema) || ReturnSchemaUtils.is(schema);\n  }\n  StepSchemaUtils.is = is;\n  function result(schema, variables) {\n    if (FormSchemaUtils.is(schema)) return FormSchemaUtils.result(schema, variables);\n    if (ReturnSchemaUtils.is(schema)) return ReturnSchemaUtils.result(schema, variables);\n    throw new Error(\"Invalid schema\");\n  }\n  StepSchemaUtils.result = result;\n})(StepSchemaUtils || (StepSchemaUtils = {}));\n\nvar FlowUtils;\n(function (FlowUtils) {\n  function getResult(flow, schema) {\n    var _flow$points = flow.points[flow.points.length - 1],\n      path = _flow$points.path,\n      variables = _flow$points.variables;\n    var nested = FlowSchemaUtils.find(schema, path);\n    return StepSchemaUtils.result(nested, variables);\n  }\n  FlowUtils.getResult = getResult;\n  function getFlow(flow, schema, formData) {\n    var stop = flow.points[flow.points.length - 1];\n    var path = stop.path;\n    var variables = stop.variables;\n    var form = FlowSchemaUtils.find(schema, path);\n    var keys = FormSchemaUtils.keys(form, variables);\n    var fields = flow.fields;\n    for (var _i = 0, _Object$entries = Object.entries(formData); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _Object$entries[_i],\n        name = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      fields = FlowFieldsUtils.set(fields, path, name, keys(name), value);\n    }\n    return _extends({}, flow, {\n      fields: fields\n    });\n  }\n  FlowUtils.getFlow = getFlow;\n})(FlowUtils || (FlowUtils = {}));\n\nfunction Formity(_ref) {\n  var components = _ref.components,\n    variables = _ref.variables,\n    schema = _ref.schema,\n    onReturn = _ref.onReturn,\n    initialFlow = _ref.initialFlow;\n  var controller = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return new Controller(schema);\n  }, [schema]);\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function () {\n      if (initialFlow) return initialFlow;\n      return controller.initial(variables);\n    }),\n    flow = _useState[0],\n    setFlow = _useState[1];\n  var form = FlowUtils.getResult(flow, schema);\n  var handleNext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (formData) {\n    var next = controller.next(flow, formData);\n    var result = FlowUtils.getResult(next, schema);\n    if (result.type === \"return\") onReturn(result[\"return\"], _extends({}, flow, {\n      fields: next.fields\n    }));else setFlow(next);\n  }, [controller, flow, onReturn]);\n  var handleBack = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (formData) {\n    var previous = controller.previous(flow, formData);\n    setFlow(previous);\n  }, [controller, flow]);\n  var getFlow = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (formData) {\n    return FlowUtils.getFlow(flow, schema, formData);\n  }, [flow, schema]);\n  var point = flow.points[flow.points.length - 1];\n  var defaultValues = useDefaultValues(form, point.path, flow.fields);\n  var resolver = useResolver(form);\n  var render = useRender(form, point.variables, components);\n  var values = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\n    return {\n      step: flow.points.length,\n      defaultValues: defaultValues,\n      resolver: resolver,\n      onNext: handleNext,\n      onBack: handleBack,\n      getFlow: getFlow\n    };\n  }, [flow.points.length, defaultValues, resolver, handleNext, handleBack, getFlow]);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(FormityContext.Provider, {\n    value: values\n  }, render(values));\n}\n\n\n//# sourceMappingURL=formity.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/formity/dist/formity.esm.js\n");

/***/ })

};
;